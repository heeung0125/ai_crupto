import time
import requests
import pandas as pd
 
while True:
    book = {}
    btc_response = requests.get('https://api.bithumb.com/public/orderbook/BTC_KRW/?count=10')
    btc_book = btc_response.json()
    btc_data = btc_book['data']

    eth_response = requests.get('https://api.bithumb.com/public/orderbook/ETH_KRW/?count=10')
    eth_book = eth_response.json()
    eth_data = eth_book['data']

    bids = pd.DataFrame(btc_data['bids']).apply(pd.to_numeric, errors='coerce')
    bids.sort_values('price', ascending=False, inplace=True)
    bids.reset_index(drop=True, inplace=True)
    bids['type'] = 0  # bid를 0으로 지정
    bids['level'] = 5  # 레벨을 5로 설정

    asks = pd.DataFrame(btc_data['asks']).apply(pd.to_numeric, errors='coerce')
    asks.sort_values('price', ascending=True, inplace=True)
    asks.reset_index(drop=True, inplace=True)
    asks['type'] = 1  # ask를 1으로 지정
    asks['level'] = 5  # 레벨을 5로 설정

    btc_df = pd.concat([bids, asks])

    bids = pd.DataFrame(eth_data['bids']).apply(pd.to_numeric, errors='coerce')
    bids.sort_values('price', ascending=False, inplace=True)
    bids.reset_index(drop=True, inplace=True)
    bids['type'] = 0  # bid를 0으로 지정
    bids['level'] = 5  # 레벨을 5로 설정

    asks = pd.DataFrame(eth_data['asks']).apply(pd.to_numeric, errors='coerce')
    asks.sort_values('price', ascending=True, inplace=True)
    asks.reset_index(drop=True, inplace=True)
    asks['type'] = 1  # ask를 1으로 지정
    asks['level'] = 5  # 레벨을 5로 설정

    eth_df = pd.concat([bids, asks])

    timestamp = time.strftime('%Y-%m-%d')
    btc_filename = f'book-{timestamp}-BTC-KRW.csv'
    eth_filename = f'book-{timestamp}-ETH-KRW.csv'

    header = ['price', 'quantity', 'type', 'level', 'timestamp']

    # BTC 데이터를 파일에 추가
    with open(btc_filename, 'a') as f:
        btc_df.to_csv(f, index=False, header=f.tell()==0, mode='a', sep='|')

    # ETH 데이터를 파일에 추가
    with open(eth_filename, 'a') as f:
        eth_df.to_csv(f, index=False, header=f.tell()==0, mode='a', sep='|')

    print(f'Orderbook for BTC saved to {btc_filename}')
    print(f'Orderbook for ETH saved to {eth_filename}')

    time.sleep(5)
